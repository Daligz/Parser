
//----------------------------------------------------
// The following code was generated by jh-javacup-1.2 20210807
// Sat Feb 26 21:52:39 CST 2022
//----------------------------------------------------

package me.upp.parser.generated;

import com.github.jhoenicke.javacup.runtime.Symbol;

/** jh-javacup-1.2 20210807 generated parser.
  * @version Sat Feb 26 21:52:39 CST 2022
  */
public class Syntax extends com.github.jhoenicke.javacup.runtime.LRParser {

  /** Default constructor. */
  public Syntax() {super();}

  /** Constructor which sets the default scanner. */
  public Syntax(com.github.jhoenicke.javacup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Syntax(com.github.jhoenicke.javacup.runtime.Scanner s, com.github.jhoenicke.javacup.runtime.SymbolFactory sf) {super(s,sf);}
  /** The static parse table */
  static com.github.jhoenicke.javacup.runtime.ParseTable CUP$parse_table =
    new com.github.jhoenicke.javacup.runtime.ParseTable(new String[] {
    "\004\000\002\001\015\020\044\026\024\042\022" +
    "\030\040\030\036\024\034\026\032\030\030\020" +
    "\064\000\000\000\000\000\000\000\000\000\000" +
    "\000\000\000\000\000\000\020\001\017\004\004" +
    "\002\002\011\011\025\001\007\013\031\005\015" +
    "\007\021\015\035\016\037\014\033\012\027\010" +
    "\023\006\017\003\013\000\003\020\001\002\000" +
    "\002"
    });

  /** Return parse table */
  protected com.github.jhoenicke.javacup.runtime.ParseTable parse_table() {
    return CUP$parse_table;
  }

  /** Instance of action encapsulation class. */
  protected CUP$Syntax$action action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Syntax$action(this);
    }

  /** Invoke a user supplied parse action. */
  public com.github.jhoenicke.javacup.runtime.Symbol do_action(
    int                        act_num,
    java.util.ArrayList        stack)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$do_action(act_num, stack);
  }



    private Symbol symbol;

    public void syntax_error(Symbol symbol) {
        this.symbol = symbol;
    }

    public Symbol getSymbol() {
        return this.symbol;
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Syntax$action {
  private final Syntax parser;

  /** Constructor */
  CUP$Syntax$action(Syntax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final com.github.jhoenicke.javacup.runtime.Symbol CUP$do_action(
    int                        CUP$act_num,
    java.util.ArrayList            CUP$stack)
    throws java.lang.Exception
    {
      /* Stack size for peeking into the stack */
      int CUP$size = CUP$stack.size();

      /* select the action based on the action number */
      switch (CUP$act_num)
        {
          // $START ::= INPUT EOF 
          case 0:
            {
              Object RESULT;
RESULT = null;
/* ACCEPT */
parser.done_parsing();
              return parser.getSymbolFactory().newSymbol("$START", 0, ((com.github.jhoenicke.javacup.runtime.Symbol) CUP$stack.get(CUP$size - 2)), ((com.github.jhoenicke.javacup.runtime.Symbol) CUP$stack.get(CUP$size - 1)), RESULT);
            }

          // INPUT ::= id sum id res id igu id sum id res id div id 
          case 1:
            {
              return parser.getSymbolFactory().newSymbol("INPUT", 1, ((com.github.jhoenicke.javacup.runtime.Symbol) CUP$stack.get(CUP$size - 13)), ((com.github.jhoenicke.javacup.runtime.Symbol) CUP$stack.get(CUP$size - 1)));
            }

          /* . . . . . .*/
          default:
            throw new InternalError(
               "Invalid action number found in internal parse table");

        }
    }
}

